<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" 
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<!-- 管理员中心-权限管理 -->
<mapper namespace="authority">
	
	<!-- 是否配置了菜单url -->
	<select id="existsMenuUrl" resultType="_boolean">
		SELECT
		IF (count(0) > 0, TRUE, FALSE)
		FROM
			t_sms_menu m
		WHERE
			m.menu_url = #{menu_url}
	</select>
	
	
		<!-- 查询父菜单 -->
	<select id="getParentIds" resultType="map">
		SELECT
			CONVERT (
		
				IF (
					m.parent_id = '0',
					m.menu_id,
					concat(m.parent_id, ',', m.menu_id)
				),
				CHAR
			) AS parent_ids
		FROM
			t_sms_menu m 
		INNER JOIN
			t_sms_role_menu rm ON m.menu_id = rm.menu_id
		INNER JOIN
			t_sms_role r ON rm.role_id = r.id
		WHERE
			m.`status` = 1
		AND r.`status` = 1
		AND m.web_id = 3
		AND m.menu_url = #{menu_url}
		AND r.id = #{role_id}
		ORDER BY
			m.`level` DESC
		LIMIT 1
	</select>
	
	<!-- 查询当前选中的菜单 -->
	<select id="getSelectMenu" resultType="map">
		SELECT
			m.menu_id,
			m.level
		FROM
			t_sms_menu m
		WHERE
			m.menu_type = 1
		AND m.menu_id IN 
		<foreach collection="array" item="i" open="(" close=")" separator=",">
			#{i}
		</foreach>
	</select>
	
	
	
	<!-- 查询menuId -->
	<select id="getMenuId" resultType="map">
		SELECT
			m.menu_id,
			m.parent_id
		FROM
			t_sms_menu m
		INNER JOIN
			t_sms_role_menu rm ON m.menu_id = rm.menu_id
		INNER JOIN
			t_sms_role r ON rm.role_id = r.id
		WHERE
			m.`status` = 1
		and r.`status` = 1
		AND	m.menu_url = #{menu_url}
		AND r.id = #{role_id}
		ORDER BY
			m.`level` DESC
		LIMIT 1

	</select>
	
	<!-- 查询角色是否对menuId有访问权限 -->
	<select id="isAuthorityMenuId" resultType="map">
		SELECT
			count(0) AS totalCount
		FROM
			t_sms_menu m
		INNER JOIN
			t_sms_role_menu rm ON m.menu_id = rm.menu_id
		INNER JOIN
			t_sms_role r ON rm.role_id = r.id
		WHERE
			m.`status` = 1
		AND m.menu_id = #{menu_id}
		AND r.`status` = 1
		AND r.id = #{role_id}
	</select>

	<!-- 分页查询权限 -->
	<select id="query" resultType="map">
		SELECT
			r.id,
			r.role_name,
			r.web_id,
			CASE r.web_id
				WHEN 3 THEN '运营平台'
				WHEN 2 THEN '代理商平台'
				WHEN 4 THEN 'OEM代理商平台'
			END as web_id_str,
			r.`status`
		FROM
			t_sms_role r
		WHERE
			r.web_id IN (3)
		<if test="text != null">
			AND r.role_name LIKE concat('%',#{text}, '%')
		</if>
		ORDER BY r.create_date DESC
		${limit}
	</select>
	
	<!-- 分页查询权限 记录总数 -->
	<select id="queryCount" resultType="map">
		SELECT
			count(0) AS totalCount
		FROM
			t_sms_role r
		WHERE
			r.web_id IN (3)
		<if test="text != null">
			AND r.role_name LIKE concat('%',#{text}, '%')
		</if>
		ORDER BY r.create_date DESC
	</select>
	
	<!-- 获取角色信息 -->
	<select id="getRole" resultType="map">
		SELECT
			r.id,
			r.role_name,
			r.web_id
		FROM
			t_sms_role r
		WHERE
			r.web_id IN (3,2,4)
		<if test="role_id != null">
			AND r.id = #{role_id}
		</if>
		<if test="role_name != null">
			AND r.role_name = #{role_name}
		</if>
	</select>
	
	<!-- 获取所有的菜单 -->
	<select id="getAllMeum" resultType="map" parameterType="map">
		SELECT
			m.menu_id,
			m.menu_name,
			m.`level`,
			m.parent_id,
		IF (
			rm.role_menu_Id IS NULL,
			'',
			'checked'
		) AS checked,
			m.web_id
		FROM
			t_sms_menu m
		LEFT JOIN t_sms_role_menu rm ON rm.menu_id = m.menu_id
		AND rm.role_id = #{role_id}
		WHERE
			m.`status` = 1
			<choose>
				<when test="web_id != null">
					AND m.`web_id` = #{web_id}
				</when>
				<otherwise>
					AND m.`web_id` = 3
				</otherwise>
			</choose>
		ORDER BY
			m.web_id,
			m.level,
			m.parent_id,
			m.sort
	</select>
	
	<!-- 添加、修改角色之前查重 -->
	<select id="checkRole" resultType="map">
		SELECT
			count(0) AS totalCount
		FROM
			t_sms_role r
		WHERE
			r.web_id = 3
		AND r.`status` = 1
		AND r.role_name = #{role_name}
		<if test="role_id != null">
			AND r.id != #{role_id}
		</if>
	</select>
	
	<!-- 添加角色 -->
	<insert id="insertRole">
		INSERT INTO t_sms_role (
			role_name,
			create_date,
			update_date,
			STATUS,
			web_id
		)
		VALUES
			(#{role_name}, now(),now(), 1,#{webId})
	</insert>
	
	<!-- 添加角色菜单 -->
	<insert id="insertRoleMenu">
		INSERT INTO t_sms_role_menu (role_id, menu_id)
		VALUES
		<foreach collection="list" item="item" separator="," >
			(#{item.role_id},#{item.menu_id})
		</foreach> 
	</insert>
	
	<!-- 修改角色 -->
	<update id="updateRole">
		UPDATE t_sms_role r
		SET 
			r.role_name = #{role_name},
		 	r.update_date = now()
<!-- 		 	,r.web_id = ${web_id} -->
		WHERE
			r.id = #{role_id}
	</update>
	
	<!-- 删除角色菜单 -->
	<delete id="deleteRoleMenu">
		DELETE
		FROM
			t_sms_role_menu
		WHERE
			role_id = #{role_id}
	</delete>
	
	<!-- 修改角色状态 -->
	<update id="updateStatus">
		UPDATE t_sms_role r
		SET r.`status` = #{status}
		WHERE
			r.id = #{role_id}
	</update>
	
	<!-- 删除角色 -->
	<delete id="deleteRole">
		DELETE r, rm
		FROM
			t_sms_role r
		LEFT JOIN t_sms_role_menu rm ON r.id = rm.role_id
		WHERE
			r.id = #{roleId}
		AND r.web_id = 3
	</delete>
	
	<!-- 判断是否有用户绑定角色 -->
	<select id="hasUserInRole"  resultType="map">
		SELECT count(1) as totalCount FROM t_sms_user_role r WHERE	r.role_id = #{role_id}
	</select>


	<!-- 根据角色获取菜单id -->
	<select id="getMenuByRoles" resultType="java.lang.String">
		SELECT
		rm.menu_id
		FROM
		t_sms_menu m
		INNER JOIN
		t_sms_role_menu rm ON m.menu_id = rm.menu_id
		INNER JOIN
		t_sms_role r ON rm.role_id = r.id
		WHERE
		m.status = 1
		AND r.status = 1
		AND m.web_id = 3
		<if test="roles != null and roles.size > 0">
			AND rm.role_id IN
			<foreach collection="roles" item="item" separator="," open="(" close=")">
				#{item.id}
			</foreach>
		</if>
	</select>

	<!-- 根据父级菜单id获取所有下级菜单按钮 -->
	<select id="getButtonByParentId" resultType="com.jsmsframework.user.entity.JsmsMenu">
		SELECT
			menu_id AS menuId,
    		menu_name AS menuName,
    		remark AS remark,
    		menu_url AS menuUrl,
  	  		menu_class AS menuClass,
   	 		menu_type AS menuType,
   	 		level AS level,
   	 		parent_id AS parentId,
    		sort AS sort,
    		status AS status,
    		web_id AS webId
		FROM
		t_sms_menu
		WHERE
		status = 1
		AND web_id = 3
		AND menu_type = 2
		AND parent_id = #{parentId}
	</select>

	<select id="getJsmsMenu" resultType="com.jsmsframework.user.entity.JsmsMenu">
		select
			menu_id AS menuId,
    		menu_name AS menuName,
    		remark AS remark,
    		menu_url AS menuUrl,
  	  		menu_class AS menuClass,
   	 		menu_type AS menuType,
   	 		level AS level,
   	 		parent_id AS parentId,
    		sort AS sort,
    		status AS status,
    		web_id AS webId
		from t_sms_menu m
		where
		m.menu_name = #{menuName}
		and m.`level` = 3
		and m.menu_type = 1
		and m.web_id = 3
		and m.status = 1
	</select>
	
</mapper> 