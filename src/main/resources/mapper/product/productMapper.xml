<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" 
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<!-- 产品管理-产品列表 -->
<mapper namespace="product">
	
	<!-- 4.3.1 OEM需求  start -->
	<!--  -->
	<select id="getAgentRebate" resultType="map">
		SELECT
			r.id,
			ROUND(r.start_line,2) AS start_line,
			ROUND(r.end_line,2) AS end_line,
			ROUND(r.rebate_proportion*100,2) AS rebate_proportion,
			r.updator,
			DATE_FORMAT(r.update_time,'%Y-%m-%d %T') AS update_time
		FROM
			`t_sms_agent_rebate` r
		ORDER BY r.start_line
	</select>
	
		<!-- 添加OEM代理商返点比例 -->
	<insert id="insertAgentRebate">
		INSERT INTO `t_sms_agent_rebate` (
			`start_line`,
			`end_line`,
			`rebate_proportion`,
			`updator`,
			`update_time`,
			`remark`
		)
		VALUES(
			#{start_line},
			#{end_line},
			(#{rebate_proportion} / 100),
			#{updator},
			NOW(),
			#{remark}
		)
	</insert>
	
	<!-- 修改OEM代理商返点比例 -->
	<update id="updateAgentRebate">
		UPDATE `t_sms_agent_rebate`
		SET
		 `start_line` = #{start_line},
		 `end_line` = #{end_line},
		 `rebate_proportion` = (#{rebate_proportion} / 100),
		 `updator` = #{updator},
		 `update_time` = NOW(),
		 `remark` = #{remark}
		WHERE
			`id` = #{rebateId}
	</update>
	
	<!-- 删除OEM代理商返点比例 -->
	<delete id="deleteAgentRebate">
		DELETE FROM
			`t_sms_agent_rebate`
		WHERE
			`id` = #{rebateId}
	</delete>
	<!-- 查询国际短信数量 -->
	<select id="queryInterSMSNumByCode" resultType="int">
		SELECT 
			COUNT(0) 
		FROM 
			t_sms_client_tariff
		WHERE 
			prefix = #{prefix}
	</select>
	
	
	<!-- 添加国际短信价格 -->
	<insert id="addInterSmsPrice">
		INSERT INTO `t_sms_client_tariff` (
			`prefix`,
			`areaname`,
			`intername`,
			`intercode`,
			`fee`
		)
		VALUES(
			#{prefix},
			#{areaname},
			#{intername},
			#{intercode},
			(#{fee})*1000000
		);
	</insert>
	
	<!-- 4.3.1 OEM需求  end -->
	
	<sql id="queryCondition">
		<where>
			<if test="productInfo != null and productInfo!=''">
				and (
						a.product_code like CONCAT('%',#{productInfo},'%' )
						or a.product_name like CONCAT('%',#{productInfo},'%' )
					)
			</if>
			<if test="status != null and status != '' ">
				and a.status = #{status}
			</if>
			<if test="start_time_day != null and start_time_day!=''">
				and a.create_time >= STR_TO_DATE(#{start_time_day},'%Y-%m-%d %H:%i:%S')
			</if>
			<if test="end_time_day != null and end_time_day!=''">
				and a.create_time <![CDATA[<= STR_TO_DATE(CONCAT(#{end_time_day},' 23:59:59'),'%Y-%m-%d %H:%i:%S') ]]>
			</if>
		</where>
	</sql>

	<select id="query" resultType="map">
		SELECT
			a.product_id,
			a.product_code,
			a.product_name,
			a.product_desc,
			a.product_type,

			<!-- 0：行业，1：营销，2：国际，3：验证码，4：通知，7：USSD，8：闪信，9：挂机短信-->
			CASE a.product_type
				WHEN 0 THEN '行业'
				WHEN 1 THEN '营销'
				WHEN 2 THEN '国际'
				WHEN 3 THEN '验证码'
				WHEN 4 THEN '通知'
				WHEN 7 THEN 'USSD'
				WHEN 8 THEN '闪信'
				WHEN 9 THEN '挂机短信'
			END AS product_type_name,

			<!-- 对应运营商，0：全网，1：移动，2：联通，3：电信，4：国际-->
			CASE a.operator_code
				WHEN 0 THEN '全网'
				WHEN 1 THEN '移动'
				WHEN 2 THEN '联通'
				WHEN 3 THEN '电信'
				WHEN 4 THEN '国际'
			END AS operator_code,

			<!-- 适用区域，0：全国，1：国际-->
			CASE a.area_code
				WHEN 0 THEN '全国'
				WHEN 1 THEN '国际'
			END AS area_code,

			a.active_period,
			case a.active_period
			 when 0 then '无限期'
			 else a.active_period
			end as active_period_name,
			a.quantity,

			case a.product_type
				when 2 then CONCAT(TRUNCATE(a.quantity,4),"元")
				else CONCAT(FLOOR(a.quantity),"条")
			end as quantity_name,

			a.product_price,
			CASE a.product_type
				WHEN 2 THEN a.product_price
				ELSE CONCAT(TRUNCATE(a.product_price,4),"元")
			END AS product_price_str,

			a.product_cost,
			CASE a.product_type
				WHEN 2 THEN a.product_cost
				ELSE CONCAT(TRUNCATE(a.product_cost,4),"元")
			END AS product_cost_str,

			a.status,
			case a.status
			 when 0 then '待上架'
			 when 1 then '已上架'
			 else '已下架' end as status_name,
			b.realname as "creator",
			a.create_time,
			date_format(
				a.create_time,
				'%Y-%m-%d'
			) AS createTime,
			a.updator,
			a.update_time,
			a.remark
		from 
			t_sms_product_info a
		JOIN t_sms_user b on b.id = a.creator
		<include refid="queryCondition" />
		order by create_time desc
		${limit}
	</select>
	
	<select id="queryCount" resultType="map">
		select count(0) as totalCount from(
			SELECT
				0
			from 
				t_sms_product_info a
			<include refid="queryCondition" />
		) m
	</select>
	
	
	<sql id="cusSetingRecordCondition">
		<where>
			<if test="selectInfo != null and selectInfo!=''">
				AND (
						   cp.client_id like CONCAT('%',#{selectInfo},'%' ) 
						OR ac.name like CONCAT('%',#{selectInfo},'%' ) 
						OR pi.product_code like CONCAT('%',#{selectInfo},'%' )
						OR pi.product_name like CONCAT('%',#{selectInfo},'%' )
					)
			</if>
			<if test="start_time_day != null and start_time_day!=''">
				AND cp.update_time >= STR_TO_DATE(#{start_time_day},'%Y-%m-%d %H:%i:%S')
			</if>
			<if test="end_time_day != null and end_time_day!=''">
				AND cp.update_time <![CDATA[<= STR_TO_DATE(CONCAT(#{end_time_day},' 23:59:59'),'%Y-%m-%d %H:%i:%S') ]]>
			</if>
		</where>
	</sql>

	<select id="cusSetingRecord" resultType="map">
		SELECT 
			cp.client_id,
			ac.name,
			cp.product_id,
			pi.product_name,
			<!-- 0：行业，1：营销，2：国际，3：验证码，4：通知，7：USSD，8：闪信，9：挂机短信-->
			CASE pi.product_type
				WHEN 0 THEN '行业'
				WHEN 1 THEN '营销'
				WHEN 2 THEN '国际'
				WHEN 3 THEN '验证码'
				WHEN 4 THEN '通知'
				WHEN 7 THEN 'USSD'
				WHEN 8 THEN '闪信'
				WHEN 9 THEN '挂机短信'
			END AS product_type_name,

			<!-- 对应运营商，0：全网，1：移动，2：联通，3：电信，4：国际-->
			CASE pi.operator_code
				WHEN 0 THEN '全网'
				WHEN 1 THEN '移动'
				WHEN 2 THEN '联通'
				WHEN 3 THEN '电信'
				WHEN 4 THEN '国际'
			END AS operator_code,

			<!-- 适用区域，0：全国，1：国际-->
			CASE pi.area_code
				WHEN 0 THEN '全国'
				WHEN 1 THEN '国际'
			END AS area_code,

			pi.product_code,
			cp.agent_id,
			case pi.product_type
				when 2 then CONCAT(TRUNCATE(pi.quantity,4),"元")
				else CONCAT(FLOOR(pi.quantity),"条")
			end as quantity,
			IF(pi.active_period =0,'无限期',CONCAT(pi.active_period,'天')) as active_period,
			CONCAT(TRUNCATE(pi.product_price,4),'元') as product_price,
			CONCAT(TRUNCATE(pi.product_cost,4),'元') as product_cost,

			cp.price_discount,
			CONCAT(TRUNCATE(cp.gn_discount_price,4),'元') as gn_discount_price,

			c.realname as "updator",
			date_format(
				cp.update_time,
				'%Y-%m-%d %H:%i:%S'
			) AS update_time
		FROM 
			t_sms_client_product cp 
		INNER JOIN t_sms_product_info pi ON cp.product_id = pi.product_id
		INNER JOIN t_sms_account ac ON cp.client_id = ac.clientid
		INNER JOIN t_sms_user c ON c.id = cp.updator
		<include refid="cusSetingRecordCondition" />
		ORDER BY cp.update_time DESC
		${limit}
	</select>
	
	<select id="cusSetingRecordCount" resultType="map"> 
		SELECT 
			count(*) as totalCount
		FROM 
			t_sms_client_product cp 
		INNER JOIN t_sms_product_info pi ON cp.product_id = pi.product_id
		INNER JOIN t_sms_account ac ON cp.client_id = ac.clientid
		<include refid="cusSetingRecordCondition" />
	</select>
	
	
	<select id="getProductDetailByProductId" resultType="map">
		SELECT
			a.product_id,
			a.product_code,
			a.product_name,
			a.product_desc,
			a.product_type,
			a.operator_code,
			a.area_code,
			a.active_period,
			floor(a.quantity) as quantity,
			case product_type
				when 2 then CONCAT(a.quantity ,"元")
				else CONCAT(FLOOR(a.quantity),"条")
			end as quantity_name,

			a.product_price,
			CASE a.product_type
				WHEN 2 THEN a.product_price
				ELSE TRUNCATE(a.product_price,4)
			END AS product_price_str,

			a.product_cost,
			CASE a.product_type
				WHEN 2 THEN a.product_cost
				ELSE TRUNCATE(a.product_cost,4)
			END AS product_cost_str,

			a.status,
			b.realname as creator,
			a.create_time,
			date_format(
				a.create_time,
				'%Y-%m-%d'
			) AS createTime,
			a.updator,
			a.update_time,
			a.remark
		FROM
			t_sms_product_info a
		JOIN t_sms_user b on b.id = a.creator
		WHERE 
			a.product_id = #{product_id}
	</select>
	
	<insert id="insertProduct">
		INSERT INTO t_sms_product_info (
			product_code,
			product_name,
			product_desc,
			operator_code,
			product_type,
			area_code,
			active_period,
			quantity,
			product_price,
			product_cost,
			status,
			creator,
			create_time,
			updator,
			update_time,
			remark
		)
		VALUES
			(
				#{product_code},
				#{product_name},
				#{product_desc},
				#{operator_code},
				#{product_type},
				#{area_code},
				#{active_period},
				#{quantity},
				#{product_price},
				#{product_cost},
				#{status},
				#{creator},
				#{create_time},
				#{updator},
				#{update_time},
				#{remark}
			)
	</insert>
	
	
	<!-- 修改短信通道 -->
	<!--<update id="updateProductInfo">-->
		<!--UPDATE -->
			<!--t_sms_product_info-->
		<!--SET -->
			<!--product_code = #{product_code},-->
			<!--product_name = #{product_name},-->
			<!--product_desc = #{product_desc},-->
			<!--operator_code = #{operator_code},-->
			<!--product_type = #{product_type},-->
			<!--area_code = #{area_code},-->
			<!--active_period = #{active_period},-->
			<!--quantity = #{quantity},-->
			<!--product_price = #{product_price},-->
			<!--product_cost = #{product_cost},-->
			<!--updator = #{updator},-->
			<!--update_time = #{update_time},-->
			<!--remark = #{remark}-->
		<!--WHERE-->
			<!--product_id = #{product_id}-->
	<!--</update>-->
	<!-- 修改短信通道 -->
	<update id="updateProductInfo" >
		UPDATE t_sms_product_info
		<set>
			<if test="product_code != null and product_code != ''">
				product_code = #{product_code},
			</if>
			<if test="product_name != null and product_name != ''">
				product_name = #{product_name},
			</if>
			<if test="product_desc != null and product_desc != ''">
				product_desc = #{product_desc},
			</if>
			<if test="operator_code != null and operator_code != ''">
				operator_code = #{operator_code},
			</if>
			<if test="product_type != null and product_type != ''">
				product_type = #{product_type},
			</if>
			<if test="area_code != null and area_code != ''">
				area_code = #{area_code},
			</if>
			<if test="active_period != null and active_period != ''">
				active_period = #{active_period},
			</if>
			<if test="quantity != null and quantity != ''">
				quantity = #{quantity},
			</if>
			<if test="product_price != null and product_price != ''">
				product_price = #{product_price},
			</if>
			<if test="product_cost != null and product_cost != ''">
				product_cost = #{product_cost},
			</if>
			<if test="updator != null and updator != ''">
				updator = #{updator},
			</if>
			<if test="update_time != null">
				update_time = #{update_time},
			</if>
			<if test="remark != null and remark != ''">
				remark = #{remark}
			</if>
		</set>
		WHERE
		product_id = #{product_id}
	</update>
	
	<update id="updateStatus">
		UPDATE 
			t_sms_product_info
		SET 
			status = #{state},
			updator = #{updator},
			update_time = #{update_time}
		WHERE
			product_id = #{id}
	</update>
	
	<select id="getAgentProductInfo" resultType="map">
		SELECT
			pi.product_id,
			pi.product_name,
			pi.product_code,
			pi.product_type,
			<!-- 0：行业，1：营销，2：国际，3：验证码，4：通知，7：USSD，8：闪信，9：挂机短信-->
			CASE pi.product_type
				WHEN 0 THEN '行业'
				WHEN 1 THEN '营销'
				WHEN 2 THEN '国际'
				WHEN 3 THEN '验证码'
				WHEN 4 THEN '通知'
				WHEN 7 THEN 'USSD'
				WHEN 8 THEN '闪信'
				WHEN 9 THEN '挂机短信'
			END AS product_type_name,
			<!-- 对应运营商，0：全网，1：移动，2：联通，3：电信，4：国际-->
			CASE pi.operator_code
				WHEN 0 THEN '全网'
				WHEN 1 THEN '移动'
				WHEN 2 THEN '联通'
				WHEN 3 THEN '电信'
				WHEN 4 THEN '国际'
			END AS operator_code,
			<!-- 适用区域，0：全国，1：国际-->
			CASE pi.area_code
				WHEN 0 THEN '全国'
				WHEN 1 THEN '国际'
			END AS area_code,
		IF(pi.active_period =0,'无限期',CONCAT(pi.active_period,'天')) as active_period,
			pi.product_price,
			CASE pi.product_type
				WHEN 2 then TRUNCATE(pi.product_price,2)
				ELSE CONCAT(TRUNCATE(pi.product_price,4),'元')
			END as product_price_str,
			pi.quantity,
			case pi.product_type
				when 2 then CONCAT(TRUNCATE(pi.quantity,4),"元")
				else CONCAT(FLOOR(pi.quantity),"条")
			end as quantity_name,
			date_format(
				pi.create_time,
				'%Y-%m-%d %H:%i:%S'
			) AS create_time,
			IFNULL(cp.price_discount,1) as price_discount,
			cp.gn_discount_price
		FROM
			t_sms_product_info pi
		LEFT JOIN t_sms_client_product cp ON pi.product_id = cp.product_id
		AND cp.client_id = #{client_id}
		AND cp.agent_id = #{agent_id}
		WHERE
			pi.status = 1 and pi.product_id not in (SELECT product_id FROM t_sms_agent_product where agent_id=#{agent_id})
		order by create_time desc
		${limit}
	</select>
	
	<select id="getAgentProductInfoCount" resultType="map">
		
		SELECT count(0) as totalCount FROM(
			SELECT
				0
			FROM
				t_sms_product_info pi
			LEFT JOIN t_sms_client_product cp ON pi.product_id = cp.product_id
			AND cp.client_id = #{client_id}
			AND cp.agent_id = #{agent_id}
			WHERE
				pi.status = 1 and pi.product_id not in (SELECT product_id FROM t_sms_agent_product where agent_id=#{agent_id})
		) m
	</select>
	
	
	<select id="checkDiscountInfo" resultType="map">
		select 
			id
		from 
		t_sms_client_product
		where 1 = 1
		and client_id = #{client_id}
		and agent_id = #{agent_id}
		and product_id = #{product_id}
	</select>
	
	<select id="getCustomerInfo" resultType="map">
		SELECT 
			ac.clientid as clientid,
			ac.name as name,
			ac.mobile as mobile,
			CASE ac.status
				WHEN 0 THEN '注册未激活'
				WHEN 1 THEN '已启用'
				WHEN 5 THEN '冻结'
				WHEN 6 THEN '注销'
				WHEN 7 THEN '锁定'
			END as status,
			
			CASE ac.oauth_status
				WHEN 2 THEN '待认证'
				WHEN 3 THEN '证件已认证'
				WHEN 4 THEN '认证不通过'
			END as oauth_status,
			ac.agent_id as agent_id,
			date_format(
				ac.createtime,
				'%Y-%m-%d %H:%i:%S'
			) AS createtime,
			ag.agent_name as agent_name
		FROM 
			t_sms_account ac INNER JOIN t_sms_agent_info ag ON ac.agent_id = ag.agent_id
		WHERE 1 = 1
		AND 
		(
			ac.clientid = #{customerInfo} 
			or ac.mobile = #{customerInfo}
			or ac.email = #{customerInfo}
		)
		LIMIT 1
	</select>
	
	<update id="updateDiscountInfo">
		update t_sms_client_product
		set 
			updator = #{updator},
			<if test="price_discount != null" >
				price_discount = #{price_discount},
			</if>
			<if test="gn_discount_price != null" >
				gn_discount_price = #{gn_discount_price},
			</if>
			update_time = #{update_time}
		where 1 = 1
			and client_id = #{client_id}
			and agent_id = #{agent_id}
			and product_id = #{product_id}
	</update>
	
	<insert id="insertDiscountInfo">
		INSERT INTO t_sms_client_product
		(
			client_id,
			agent_id,
			product_id,
			<if test="price_discount != null" >
				price_discount,
			</if>
			<if test="gn_discount_price != null" >
				gn_discount_price,
			</if>
			create_time,
			updator ,
			update_time 
		)
		VALUES
		(
			#{client_id},
			#{agent_id},
			#{product_id},
			<if test="price_discount != null" >
				#{price_discount},
			</if>
			<if test="gn_discount_price != null" >
				#{gn_discount_price},
			</if>
			#{create_time},
			#{updator},
			#{update_time}
		)
	</insert>
	
	<select id="queryInterSmsPrice" resultType="map">
	   select id, prefix,areaname,intername,intercode,CAST((fee/1000000)AS DECIMAL(15,2)) AS fee
	   from t_sms_client_tariff where 1=1
	   <if test="condition!=null and condition!=''">
	     and (intername like '%${condition}%' or areaname like '%${condition}%' or prefix like '%${condition}%')
	   </if>
	   order by intername
	   ${limit}
	</select>
	
	<select id="queryInterSmsPriceCount" resultType="map">
	   select count(0) as totalCount
	   from t_sms_client_tariff where 1=1
	   <if test="condition!=null">
	     and (intername like '%${condition}%' or areaname like '%${condition}%' or prefix like '%${condition}%')
	   </if>
	</select>
	
	<select id="exportInterSmsPrice" resultType="map">
	   select id, prefix,areaname,intername,intercode,CAST((fee/1000000)AS DECIMAL(15,2)) AS fee
	   from t_sms_client_tariff where 1=1
	   <if test="condition!=null">
	     and (intername like '%${condition}%' or areaname like '%${condition}%' or prefix like '%${condition}%')
	   </if>
	   order by intername
	</select>
	
	<delete id="deleteInterSmsPriceMsg">
	   delete from t_sms_client_tariff where id=#{id}
	</delete>
	
	
	<select id="getInterSmsPriceById" resultType="map">
	    select id, prefix,areaname,intername,intercode,TRUNCATE (fee / 1000000, 4) fee
	    from t_sms_client_tariff where id =#{id}
	    limit 1
	</select>
	
	<update id="updateInterSmsPriceInfo">
	  update t_sms_client_tariff set prefix=#{prefix},areaname=#{areaname},intername=#{intername},intercode=#{intercode},fee=(#{fee})*1000000
	  where id=#{id}
	</update>
	
	
	<select id="queryProductNumByCode" resultType="int">
		SELECT 
			COUNT(0) 
		FROM 
			t_sms_product_info
		WHERE 
			product_code = #{product_code}
	</select>
	
</mapper> 